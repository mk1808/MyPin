server:
  port: 8082

spring:
  application:
    name: "users"
  datasource:
    driver-class-name: org.postgresql.Driver
    password: admin
    url: jdbc:postgresql://localhost:5433/usersDb
    username: admin
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: always
      
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:7080/realms/master/protocol/openid-connect/certs"
          useInsecureTrustManager: true
          issuer-uri: http://localhost:7080/realms/master
      client:
        registration:
          keycloak:
            client-id: users-microservice
            authorization-grant-type: authorization_code
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://localhost:7080/realms/master
            user-name-attribute: preferred_username
            
keycloak:
  admin-connection:
    server-url: http://localhost:7080/
    realm: master
    username: admin
    password: admin
    clientId: admin-cli
            
logging:
  level:
    org:
      springframework:
        security: DEBUG
  
info:
  app:
    info: "Users microservice"
    
management:
  info:
    java:
      enabled: true
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
